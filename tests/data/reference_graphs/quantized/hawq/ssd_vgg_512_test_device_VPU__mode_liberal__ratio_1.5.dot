strict digraph  {
"0 /nncf_model_input" [id=0, label="nncf_model_input_#0", scope="", style=filled, type=nncf_model_input];
"1 AsymmetricQuantizer/asymmetric_quantize" [color=green, id=1, label="AFQ_[B:8 M:A SGN:S PC:N]_#1_G1", scope=AsymmetricQuantizer, style=filled, type=asymmetric_quantize];
"2 SSD_VGG/__getitem__" [id=2, label="__getitem___#2", scope=SSD_VGG, style=filled, type=__getitem__];
"3 SSD_VGG/unsqueeze" [id=3, label="unsqueeze_#3", scope=SSD_VGG, style=filled, type=unsqueeze];
"4 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=4, label="WFQ_[B:8 M:S SGN:S PC:Y]_#4_G1", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d" [color=lightblue, id=5, label="conv2d_k3x3_PAD_#5", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]", style=filled, type=conv2d];
"6 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/RELU" [id=6, label="RELU_#6", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]", style=filled, type=RELU];
"7 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/SymmetricQuantizer/symmetric_quantize" [color=red, id=7, label="AFQ_[B:4 M:S SGN:U PC:N]_#7_G2", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"8 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=8, label="WFQ_[B:4 M:S SGN:S PC:Y]_#8_G2", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"9 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/pad" [color=lightblue, id=9, label="pad_k3x3_PAD_#9", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]", style=filled, type=pad];
"10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d" [color=lightblue, id=10, label="conv2d_k3x3_PAD_#10", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]", style=filled, type=conv2d];
"11 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/RELU" [id=11, label="RELU_#11", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]", style=filled, type=RELU];
"12 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=12, label="AFQ_[B:8 M:A SGN:S PC:N]_#12_G3", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"13 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]/max_pool2d" [id=13, label="max_pool2d_#13", scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]", style=filled, type=max_pool2d];
"14 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=14, label="WFQ_[B:8 M:S SGN:S PC:Y]_#14_G3", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"15 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d" [color=lightblue, id=15, label="conv2d_k3x3_PAD_#15", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]", style=filled, type=conv2d];
"16 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/RELU" [id=16, label="RELU_#16", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]", style=filled, type=RELU];
"17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/SymmetricQuantizer/symmetric_quantize" [color=red, id=17, label="AFQ_[B:4 M:S SGN:U PC:N]_#17_G4", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"18 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=18, label="WFQ_[B:4 M:S SGN:S PC:Y]_#18_G4", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/pad" [color=lightblue, id=19, label="pad_k3x3_PAD_#19", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]", style=filled, type=pad];
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d" [color=lightblue, id=20, label="conv2d_k3x3_PAD_#20", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]", style=filled, type=conv2d];
"21 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/RELU" [id=21, label="RELU_#21", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]", style=filled, type=RELU];
"22 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/SymmetricQuantizer/symmetric_quantize" [color=red, id=22, label="AFQ_[B:4 M:S SGN:U PC:N]_#22_G5", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"23 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]/max_pool2d" [id=23, label="max_pool2d_#23", scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]", style=filled, type=max_pool2d];
"24 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=24, label="WFQ_[B:4 M:S SGN:S PC:Y]_#24_G5", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/pad" [color=lightblue, id=25, label="pad_k3x3_PAD_#25", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]", style=filled, type=pad];
"26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d" [color=lightblue, id=26, label="conv2d_k3x3_PAD_#26", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]", style=filled, type=conv2d];
"27 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/RELU" [id=27, label="RELU_#27", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]", style=filled, type=RELU];
"28 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=28, label="AFQ_[B:8 M:A SGN:S PC:N]_#28_G6", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=29, label="WFQ_[B:8 M:S SGN:S PC:Y]_#29_G6", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"30 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d" [color=lightblue, id=30, label="conv2d_k3x3_PAD_#30", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]", style=filled, type=conv2d];
"31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/RELU" [id=31, label="RELU_#31", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]", style=filled, type=RELU];
"32 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/SymmetricQuantizer/symmetric_quantize" [color=red, id=32, label="AFQ_[B:4 M:S SGN:U PC:N]_#32_G7", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"33 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=33, label="WFQ_[B:4 M:S SGN:S PC:Y]_#33_G7", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/pad" [color=lightblue, id=34, label="pad_k3x3_PAD_#34", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]", style=filled, type=pad];
"35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d" [color=lightblue, id=35, label="conv2d_k3x3_PAD_#35", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]", style=filled, type=conv2d];
"36 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/RELU" [id=36, label="RELU_#36", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]", style=filled, type=RELU];
"37 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/SymmetricQuantizer/symmetric_quantize" [color=red, id=37, label="AFQ_[B:4 M:S SGN:U PC:N]_#37_G8", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"38 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]/max_pool2d" [id=38, label="max_pool2d_#38", scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]", style=filled, type=max_pool2d];
"39 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=39, label="WFQ_[B:4 M:S SGN:S PC:Y]_#39_G8", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"40 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/pad" [color=lightblue, id=40, label="pad_k3x3_PAD_#40", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]", style=filled, type=pad];
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d" [color=lightblue, id=41, label="conv2d_k3x3_PAD_#41", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]", style=filled, type=conv2d];
"42 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/RELU" [id=42, label="RELU_#42", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]", style=filled, type=RELU];
"43 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/SymmetricQuantizer/symmetric_quantize" [color=red, id=43, label="AFQ_[B:4 M:S SGN:U PC:N]_#43_G9", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"44 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=44, label="WFQ_[B:4 M:S SGN:S PC:Y]_#44_G9", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"45 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/pad" [color=lightblue, id=45, label="pad_k3x3_PAD_#45", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]", style=filled, type=pad];
"46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d" [color=lightblue, id=46, label="conv2d_k3x3_PAD_#46", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]", style=filled, type=conv2d];
"47 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/RELU" [id=47, label="RELU_#47", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]", style=filled, type=RELU];
"48 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/SymmetricQuantizer/symmetric_quantize" [color=red, id=48, label="AFQ_[B:4 M:S SGN:U PC:N]_#48_G10", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"49 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=49, label="WFQ_[B:4 M:S SGN:S PC:Y]_#49_G10", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/pad" [color=lightblue, id=50, label="pad_k3x3_PAD_#50", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]", style=filled, type=pad];
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d" [color=lightblue, id=51, label="conv2d_k3x3_PAD_#51", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]", style=filled, type=conv2d];
"52 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU" [id=52, label="RELU_#52", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]", style=filled, type=RELU];
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=53, label="AFQ_[B:8 M:A SGN:S PC:N]_#53_G27", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"54 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d" [id=54, label="max_pool2d_#54", scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]", style=filled, type=max_pool2d];
"55 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=55, label="WFQ_[B:4 M:S SGN:S PC:Y]_#55_G27", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d" [color=lightblue, id=56, label="conv2d_k3x3_PAD_#56", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]", style=filled, type=conv2d];
"57 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/RELU" [id=57, label="RELU_#57", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]", style=filled, type=RELU];
"58 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/SymmetricQuantizer/symmetric_quantize" [color=red, id=58, label="AFQ_[B:4 M:S SGN:U PC:N]_#58_G11", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"59 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=59, label="WFQ_[B:4 M:S SGN:S PC:Y]_#59_G11", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/pad" [color=lightblue, id=60, label="pad_k3x3_PAD_#60", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]", style=filled, type=pad];
"61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d" [color=lightblue, id=61, label="conv2d_k3x3_PAD_#61", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]", style=filled, type=conv2d];
"62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/RELU" [id=62, label="RELU_#62", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]", style=filled, type=RELU];
"63 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/SymmetricQuantizer/symmetric_quantize" [color=red, id=63, label="AFQ_[B:4 M:S SGN:U PC:N]_#63_G12", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=64, label="WFQ_[B:4 M:S SGN:S PC:Y]_#64_G12", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/pad" [color=lightblue, id=65, label="pad_k3x3_PAD_#65", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]", style=filled, type=pad];
"66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d" [color=lightblue, id=66, label="conv2d_k3x3_PAD_#66", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]", style=filled, type=conv2d];
"67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU" [id=67, label="RELU_#67", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]", style=filled, type=RELU];
"68 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=68, label="AFQ_[B:8 M:A SGN:S PC:N]_#68_G13", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"69 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]/max_pool2d" [id=69, label="max_pool2d_#69", scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]", style=filled, type=max_pool2d];
"70 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=70, label="WFQ_[B:8 M:S SGN:S PC:Y]_#70_G13", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d" [color=lightblue, id=71, label="conv2d_k3x3_PAD_#71", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]", style=filled, type=conv2d];
"72 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU" [id=72, label="RELU_#72", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]", style=filled, type=RELU];
"73 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=73, label="AFQ_[B:8 M:A SGN:S PC:N]_#73_G14", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"74 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=74, label="WFQ_[B:8 M:S SGN:S PC:Y]_#74_G14", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"75 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d" [color=lightblue, id=75, label="conv2d_k1x1_PAD_#75", scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]", style=filled, type=conv2d];
"76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/RELU" [id=76, label="RELU_#76", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]", style=filled, type=RELU];
"77 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/SymmetricQuantizer/symmetric_quantize" [color=red, id=77, label="AFQ_[B:4 M:S SGN:U PC:N]_#77_G21", scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"78 SSD_VGG/NNCFUserL2Norm[L2Norm]/div" [id=78, label="div_#78", scope="SSD_VGG/NNCFUserL2Norm[L2Norm]", style=filled, type=div];
"79 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" [color=red, id=79, label="AFQ_[B:4 M:S SGN:U PC:N]_#79_G0", scope="SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"80 SSD_VGG/NNCFUserL2Norm[L2Norm]/__rmul__" [id=80, label="__rmul___#80", scope="SSD_VGG/NNCFUserL2Norm[L2Norm]", style=filled, type=__rmul__];
"81 SSD_VGG/NNCFUserL2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=81, label="AFQ_[B:8 M:A SGN:S PC:N]_#81_G20", scope="SSD_VGG/NNCFUserL2Norm[L2Norm]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"82 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=82, label="WFQ_[B:4 M:S SGN:S PC:Y]_#82_G21", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"83 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d" [color=lightblue, id=83, label="conv2d_k1x1_#83", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]", style=filled, type=conv2d];
"84 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/RELU" [id=84, label="RELU_#84", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[1]", style=filled, type=RELU];
"85 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=85, label="AFQ_[B:8 M:A SGN:S PC:N]_#85_G15", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"86 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=86, label="WFQ_[B:8 M:S SGN:S PC:Y]_#86_G15", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"87 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d" [color=lightblue, id=87, label="conv2d_k1x1_PAD_#87", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]", style=filled, type=conv2d];
"88 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/RELU" [id=88, label="RELU_#88", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[3]", style=filled, type=RELU];
"89 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/SymmetricQuantizer/symmetric_quantize" [color=red, id=89, label="AFQ_[B:4 M:S SGN:U PC:N]_#89_G22", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"90 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=90, label="WFQ_[B:8 M:S SGN:S PC:Y]_#90_G22", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"91 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d" [color=lightblue, id=91, label="conv2d_k1x1_#91", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]", style=filled, type=conv2d];
"92 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU" [id=92, label="RELU_#92", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[5]", style=filled, type=RELU];
"93 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" [color=red, id=93, label="AFQ_[B:4 M:S SGN:U PC:N]_#93_G16", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"94 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=94, label="WFQ_[B:4 M:S SGN:S PC:Y]_#94_G16", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"95 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/pad" [color=lightblue, id=95, label="pad_k1x1_PAD_#95", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]", style=filled, type=pad];
"96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d" [color=lightblue, id=96, label="conv2d_k1x1_PAD_#96", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]", style=filled, type=conv2d];
"97 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/RELU" [id=97, label="RELU_#97", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[7]", style=filled, type=RELU];
"98 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/SymmetricQuantizer/symmetric_quantize" [color=red, id=98, label="AFQ_[B:4 M:S SGN:U PC:N]_#98_G23", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"99 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=99, label="WFQ_[B:8 M:S SGN:S PC:Y]_#99_G23", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"100 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d" [color=lightblue, id=100, label="conv2d_k1x1_#100", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]", style=filled, type=conv2d];
"101 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/RELU" [id=101, label="RELU_#101", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[9]", style=filled, type=RELU];
"102 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/SymmetricQuantizer/symmetric_quantize" [color=red, id=102, label="AFQ_[B:4 M:S SGN:U PC:N]_#102_G17", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"103 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=103, label="WFQ_[B:4 M:S SGN:S PC:Y]_#103_G17", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/pad" [color=lightblue, id=104, label="pad_k1x1_PAD_#104", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]", style=filled, type=pad];
"105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d" [color=lightblue, id=105, label="conv2d_k1x1_PAD_#105", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]", style=filled, type=conv2d];
"106 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU" [id=106, label="RELU_#106", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[11]", style=filled, type=RELU];
"107 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" [color=red, id=107, label="AFQ_[B:4 M:S SGN:U PC:N]_#107_G24", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"108 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=108, label="WFQ_[B:4 M:S SGN:S PC:Y]_#108_G24", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d" [color=lightblue, id=109, label="conv2d_k1x1_#109", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]", style=filled, type=conv2d];
"110 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/RELU" [id=110, label="RELU_#110", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[13]", style=filled, type=RELU];
"111 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize" [color=green, id=111, label="AFQ_[B:8 M:A SGN:S PC:N]_#111_G18", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer", style=filled, type=asymmetric_quantize];
"112 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=112, label="WFQ_[B:8 M:S SGN:S PC:Y]_#112_G18", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"113 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d" [color=lightblue, id=113, label="conv2d_k1x1_PAD_#113", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]", style=filled, type=conv2d];
"114 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/RELU" [id=114, label="RELU_#114", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[15]", style=filled, type=RELU];
"115 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/SymmetricQuantizer/symmetric_quantize" [color=red, id=115, label="AFQ_[B:4 M:S SGN:U PC:N]_#115_G25", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"116 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=116, label="WFQ_[B:4 M:S SGN:S PC:Y]_#116_G25", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"117 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d" [color=lightblue, id=117, label="conv2d_k1x1_#117", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]", style=filled, type=conv2d];
"118 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU" [id=118, label="RELU_#118", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[17]", style=filled, type=RELU];
"119 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize" [color=red, id=119, label="AFQ_[B:4 M:S SGN:U PC:N]_#119_G19", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"120 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=120, label="WFQ_[B:4 M:S SGN:S PC:Y]_#120_G19", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/pad" [color=lightblue, id=121, label="pad_k4x4_PAD_#121", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]", style=filled, type=pad];
"122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d" [color=lightblue, id=122, label="conv2d_k4x4_PAD_#122", scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]", style=filled, type=conv2d];
"123 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/RELU" [id=123, label="RELU_#123", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[19]", style=filled, type=RELU];
"124 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/SymmetricQuantizer/symmetric_quantize" [color=red, id=124, label="AFQ_[B:4 M:S SGN:U PC:N]_#124_G26", scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"125 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=125, label="WFQ_[B:8 M:S SGN:S PC:Y]_#125_G20", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"126 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=126, label="conv2d_k3x3_PAD_#126", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]", style=filled, type=conv2d];
"127 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=127, label="WFQ_[B:8 M:S SGN:S PC:Y]_#127_G20", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"128 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=128, label="conv2d_k3x3_PAD_#128", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]", style=filled, type=conv2d];
"129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" [id=129, label="permute_#129", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]", style=filled, type=permute];
"130 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" [id=130, label="permute_#130", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]", style=filled, type=permute];
"131 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=131, label="WFQ_[B:4 M:S SGN:S PC:Y]_#131_G21", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/pad" [color=lightblue, id=132, label="pad_k3x3_PAD_#132", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]", style=filled, type=pad];
"133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=133, label="conv2d_k3x3_PAD_#133", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]", style=filled, type=conv2d];
"134 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=134, label="WFQ_[B:4 M:S SGN:S PC:Y]_#134_G21", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/pad" [color=lightblue, id=135, label="pad_k3x3_PAD_#135", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]", style=filled, type=pad];
"136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=136, label="conv2d_k3x3_PAD_#136", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]", style=filled, type=conv2d];
"137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" [id=137, label="permute_#137", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]", style=filled, type=permute];
"138 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" [id=138, label="permute_#138", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]", style=filled, type=permute];
"139 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=139, label="WFQ_[B:4 M:S SGN:S PC:Y]_#139_G22", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"140 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/pad" [color=lightblue, id=140, label="pad_k3x3_PAD_#140", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]", style=filled, type=pad];
"141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=141, label="conv2d_k3x3_PAD_#141", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]", style=filled, type=conv2d];
"142 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=142, label="WFQ_[B:4 M:S SGN:S PC:Y]_#142_G22", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"143 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/pad" [color=lightblue, id=143, label="pad_k3x3_PAD_#143", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]", style=filled, type=pad];
"144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=144, label="conv2d_k3x3_PAD_#144", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]", style=filled, type=conv2d];
"145 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" [id=145, label="permute_#145", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]", style=filled, type=permute];
"146 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" [id=146, label="permute_#146", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]", style=filled, type=permute];
"147 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=147, label="WFQ_[B:4 M:S SGN:S PC:Y]_#147_G23", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"148 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/pad" [color=lightblue, id=148, label="pad_k3x3_PAD_#148", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]", style=filled, type=pad];
"149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=149, label="conv2d_k3x3_PAD_#149", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]", style=filled, type=conv2d];
"150 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=150, label="WFQ_[B:8 M:S SGN:S PC:Y]_#150_G23", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"151 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=151, label="conv2d_k3x3_PAD_#151", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]", style=filled, type=conv2d];
"152 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" [id=152, label="permute_#152", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]", style=filled, type=permute];
"153 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" [id=153, label="permute_#153", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]", style=filled, type=permute];
"154 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=154, label="WFQ_[B:8 M:S SGN:S PC:Y]_#154_G24", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"155 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=155, label="conv2d_k3x3_PAD_#155", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]", style=filled, type=conv2d];
"156 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=156, label="WFQ_[B:4 M:S SGN:S PC:Y]_#156_G24", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"157 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/pad" [color=lightblue, id=157, label="pad_k3x3_PAD_#157", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]", style=filled, type=pad];
"158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=158, label="conv2d_k3x3_PAD_#158", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]", style=filled, type=conv2d];
"159 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" [id=159, label="permute_#159", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]", style=filled, type=permute];
"160 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" [id=160, label="permute_#160", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]", style=filled, type=permute];
"161 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=161, label="WFQ_[B:4 M:S SGN:S PC:Y]_#161_G25", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"162 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/pad" [color=lightblue, id=162, label="pad_k3x3_PAD_#162", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]", style=filled, type=pad];
"163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=163, label="conv2d_k3x3_PAD_#163", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]", style=filled, type=conv2d];
"164 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=164, label="WFQ_[B:8 M:S SGN:S PC:Y]_#164_G25", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"165 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=165, label="conv2d_k3x3_PAD_#165", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]", style=filled, type=conv2d];
"166 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" [id=166, label="permute_#166", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]", style=filled, type=permute];
"167 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" [id=167, label="permute_#167", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]", style=filled, type=permute];
"168 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=green, id=168, label="WFQ_[B:8 M:S SGN:S PC:Y]_#168_G26", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"169 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d" [color=lightblue, id=169, label="conv2d_k3x3_PAD_#169", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]", style=filled, type=conv2d];
"170 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=170, label="WFQ_[B:4 M:S SGN:S PC:Y]_#170_G26", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"171 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/pad" [color=lightblue, id=171, label="pad_k3x3_PAD_#171", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]", style=filled, type=pad];
"172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d" [color=lightblue, id=172, label="conv2d_k3x3_PAD_#172", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]", style=filled, type=conv2d];
"173 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/permute" [id=173, label="permute_#173", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]", style=filled, type=permute];
"174 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/permute" [id=174, label="permute_#174", scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]", style=filled, type=permute];
"175 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=175, label="view_#175", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"176 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=176, label="view_#176", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"177 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=177, label="view_#177", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"178 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=178, label="view_#178", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"179 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=179, label="view_#179", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"180 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=180, label="view_#180", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"181 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=181, label="view_#181", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"182 SSD_VGG/SSDDetectionOutput[detection_head]/cat" [id=182, label="cat_#182", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=cat];
"183 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=183, label="view_#183", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"184 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=184, label="view_#184", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"185 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=185, label="view_#185", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"186 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=186, label="view_#186", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"187 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=187, label="view_#187", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"188 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=188, label="view_#188", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"189 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=189, label="view_#189", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"190 SSD_VGG/SSDDetectionOutput[detection_head]/cat" [id=190, label="cat_#190", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=cat];
"191 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=191, label="view_#191", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"192 SSD_VGG/SSDDetectionOutput[detection_head]/softmax" [id=192, label="softmax_#192", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=softmax];
"193 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=193, label="view_#193", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"194 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=194, label="view_#194", scope="SSD_VGG/SSDDetectionOutput[detection_head]", style=filled, type=view];
"195 /nncf_model_output" [id=195, label="nncf_model_output_#195", scope="", style=filled, type=nncf_model_output];
"196 /nncf_model_output" [id=196, label="nncf_model_output_#196", scope="", style=filled, type=nncf_model_output];
"9 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"40 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"45 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"95 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"140 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"143 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"148 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"157 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"162 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"171 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/pad_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d_apad" [color=yellow, label=adjust_padding_value, style=filled, type=""];
"0 /nncf_model_input" -> "1 AsymmetricQuantizer/asymmetric_quantize";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "2 SSD_VGG/__getitem__";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d";
"2 SSD_VGG/__getitem__" -> "3 SSD_VGG/unsqueeze";
"4 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d";
"5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d" -> "6 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/RELU";
"6 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/RELU" -> "7 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/SymmetricQuantizer/symmetric_quantize";
"7 SSD_VGG/MultiOutputSequential[basenet]/ReLU[1]/SymmetricQuantizer/symmetric_quantize" -> "9 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/pad";
"8 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d";
"9 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/pad" -> "10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d";
"10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d" -> "11 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/RELU";
"11 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/RELU" -> "12 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize";
"12 SSD_VGG/MultiOutputSequential[basenet]/ReLU[3]/AsymmetricQuantizer/asymmetric_quantize" -> "13 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]/max_pool2d";
"13 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[4]/max_pool2d" -> "15 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d";
"14 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "15 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d";
"15 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[5]/conv2d" -> "16 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/RELU";
"16 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/RELU" -> "17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/SymmetricQuantizer/symmetric_quantize";
"17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[6]/SymmetricQuantizer/symmetric_quantize" -> "19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/pad";
"18 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/pad" -> "20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d" -> "21 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/RELU";
"21 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/RELU" -> "22 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/SymmetricQuantizer/symmetric_quantize";
"22 SSD_VGG/MultiOutputSequential[basenet]/ReLU[8]/SymmetricQuantizer/symmetric_quantize" -> "23 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]/max_pool2d";
"23 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[9]/max_pool2d" -> "25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/pad";
"24 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/pad" -> "26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d" -> "27 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/RELU";
"27 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/RELU" -> "28 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize";
"28 SSD_VGG/MultiOutputSequential[basenet]/ReLU[11]/AsymmetricQuantizer/asymmetric_quantize" -> "30 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d";
"29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "30 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d";
"30 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[12]/conv2d" -> "31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/RELU";
"31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/RELU" -> "32 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/SymmetricQuantizer/symmetric_quantize";
"32 SSD_VGG/MultiOutputSequential[basenet]/ReLU[13]/SymmetricQuantizer/symmetric_quantize" -> "34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/pad";
"33 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/pad" -> "35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d" -> "36 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/RELU";
"36 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/RELU" -> "37 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/SymmetricQuantizer/symmetric_quantize";
"37 SSD_VGG/MultiOutputSequential[basenet]/ReLU[15]/SymmetricQuantizer/symmetric_quantize" -> "38 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]/max_pool2d";
"38 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[16]/max_pool2d" -> "40 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/pad";
"39 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"40 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/pad" -> "41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d" -> "42 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/RELU";
"42 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/RELU" -> "43 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/SymmetricQuantizer/symmetric_quantize";
"43 SSD_VGG/MultiOutputSequential[basenet]/ReLU[18]/SymmetricQuantizer/symmetric_quantize" -> "45 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/pad";
"44 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d";
"45 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/pad" -> "46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d";
"46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d" -> "47 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/RELU";
"47 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/RELU" -> "48 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/SymmetricQuantizer/symmetric_quantize";
"48 SSD_VGG/MultiOutputSequential[basenet]/ReLU[20]/SymmetricQuantizer/symmetric_quantize" -> "50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/pad";
"49 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d";
"50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/pad" -> "51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d";
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d" -> "52 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU";
"52 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU" -> "53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize";
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize" -> "54 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d";
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/AsymmetricQuantizer/asymmetric_quantize" -> "78 SSD_VGG/NNCFUserL2Norm[L2Norm]/div";
"54 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d" -> "56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d";
"55 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d";
"56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d" -> "57 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/RELU";
"57 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/RELU" -> "58 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/SymmetricQuantizer/symmetric_quantize";
"58 SSD_VGG/MultiOutputSequential[basenet]/ReLU[25]/SymmetricQuantizer/symmetric_quantize" -> "60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/pad";
"59 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d";
"60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/pad" -> "61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d";
"61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d" -> "62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/RELU";
"62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/RELU" -> "63 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/SymmetricQuantizer/symmetric_quantize";
"63 SSD_VGG/MultiOutputSequential[basenet]/ReLU[27]/SymmetricQuantizer/symmetric_quantize" -> "65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/pad";
"64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d";
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/pad" -> "66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d";
"66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d" -> "67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU";
"67 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU" -> "68 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer/asymmetric_quantize";
"68 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/AsymmetricQuantizer/asymmetric_quantize" -> "69 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]/max_pool2d";
"69 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[30]/max_pool2d" -> "71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d";
"70 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d";
"71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[31]/conv2d" -> "72 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU";
"72 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU" -> "73 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer/asymmetric_quantize";
"73 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/AsymmetricQuantizer/asymmetric_quantize" -> "75 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d";
"74 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "75 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d";
"75 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[33]/conv2d" -> "76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/RELU";
"76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/RELU" -> "77 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/SymmetricQuantizer/symmetric_quantize";
"77 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/SymmetricQuantizer/symmetric_quantize" -> "83 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d";
"77 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/SymmetricQuantizer/symmetric_quantize" -> "132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/pad";
"77 SSD_VGG/MultiOutputSequential[basenet]/ReLU[34]/SymmetricQuantizer/symmetric_quantize" -> "135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/pad";
"78 SSD_VGG/NNCFUserL2Norm[L2Norm]/div" -> "79 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize";
"79 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" -> "80 SSD_VGG/NNCFUserL2Norm[L2Norm]/__rmul__";
"80 SSD_VGG/NNCFUserL2Norm[L2Norm]/__rmul__" -> "81 SSD_VGG/NNCFUserL2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize";
"81 SSD_VGG/NNCFUserL2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" -> "126 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d";
"81 SSD_VGG/NNCFUserL2Norm[L2Norm]/AsymmetricQuantizer/asymmetric_quantize" -> "128 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d";
"82 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "83 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d";
"83 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d" -> "84 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/RELU";
"84 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/RELU" -> "85 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize";
"85 SSD_VGG/MultiOutputSequential[extras]/ReLU[1]/AsymmetricQuantizer/asymmetric_quantize" -> "87 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d";
"86 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "87 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d";
"87 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[2]/conv2d" -> "88 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/RELU";
"88 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/RELU" -> "89 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/SymmetricQuantizer/symmetric_quantize";
"89 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/SymmetricQuantizer/symmetric_quantize" -> "91 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d";
"89 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/SymmetricQuantizer/symmetric_quantize" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/pad";
"89 SSD_VGG/MultiOutputSequential[extras]/ReLU[3]/SymmetricQuantizer/symmetric_quantize" -> "143 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/pad";
"90 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "91 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d";
"91 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[4]/conv2d" -> "92 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU";
"92 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU" -> "93 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize";
"93 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" -> "95 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/pad";
"94 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"95 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/pad" -> "96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d" -> "97 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/RELU";
"97 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/RELU" -> "98 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/SymmetricQuantizer/symmetric_quantize";
"98 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/SymmetricQuantizer/symmetric_quantize" -> "100 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d";
"98 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/SymmetricQuantizer/symmetric_quantize" -> "148 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/pad";
"98 SSD_VGG/MultiOutputSequential[extras]/ReLU[7]/SymmetricQuantizer/symmetric_quantize" -> "151 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d";
"99 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "100 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d";
"100 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[8]/conv2d" -> "101 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/RELU";
"101 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/RELU" -> "102 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/SymmetricQuantizer/symmetric_quantize";
"102 SSD_VGG/MultiOutputSequential[extras]/ReLU[9]/SymmetricQuantizer/symmetric_quantize" -> "104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/pad";
"103 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d";
"104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/pad" -> "105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d";
"105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d" -> "106 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU";
"106 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU" -> "107 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize";
"107 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" -> "109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d";
"107 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" -> "155 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d";
"107 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" -> "157 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/pad";
"108 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d";
"109 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d" -> "110 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/RELU";
"110 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/RELU" -> "111 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize";
"111 SSD_VGG/MultiOutputSequential[extras]/ReLU[13]/AsymmetricQuantizer/asymmetric_quantize" -> "113 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d";
"112 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "113 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d";
"113 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[14]/conv2d" -> "114 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/RELU";
"114 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/RELU" -> "115 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/SymmetricQuantizer/symmetric_quantize";
"115 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/SymmetricQuantizer/symmetric_quantize" -> "117 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d";
"115 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/SymmetricQuantizer/symmetric_quantize" -> "162 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/pad";
"115 SSD_VGG/MultiOutputSequential[extras]/ReLU[15]/SymmetricQuantizer/symmetric_quantize" -> "165 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d";
"116 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "117 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d";
"117 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[16]/conv2d" -> "118 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU";
"118 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU" -> "119 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize";
"119 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize" -> "121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/pad";
"120 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/pad" -> "122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d" -> "123 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/RELU";
"123 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/RELU" -> "124 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/SymmetricQuantizer/symmetric_quantize";
"124 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/SymmetricQuantizer/symmetric_quantize" -> "169 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d";
"124 SSD_VGG/MultiOutputSequential[extras]/ReLU[19]/SymmetricQuantizer/symmetric_quantize" -> "171 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/pad";
"125 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "126 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d";
"126 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d" -> "129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute";
"127 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "128 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d";
"128 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d" -> "130 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute";
"129 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" -> "175 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"130 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" -> "183 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"131 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/pad" -> "133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d" -> "137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute";
"134 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/pad" -> "136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d" -> "138 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute";
"137 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" -> "176 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"138 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" -> "184 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"139 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"140 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/pad" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d" -> "145 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute";
"142 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"143 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/pad" -> "144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d" -> "146 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute";
"145 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" -> "177 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"146 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" -> "185 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"147 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"148 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/pad" -> "149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d" -> "152 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute";
"150 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "151 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d";
"151 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d" -> "153 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute";
"152 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" -> "178 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"153 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" -> "186 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"154 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "155 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d";
"155 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d" -> "159 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute";
"156 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"157 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/pad" -> "158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d" -> "160 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute";
"159 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" -> "179 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"160 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" -> "187 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"161 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"162 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/pad" -> "163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d" -> "166 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute";
"164 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "165 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d";
"165 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d" -> "167 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute";
"166 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" -> "180 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"167 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" -> "188 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"168 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "169 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d";
"169 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[loc]/conv2d" -> "173 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/permute";
"170 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d";
"171 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/pad" -> "172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d";
"172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d" -> "174 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/permute";
"173 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/permute" -> "181 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"174 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/permute" -> "189 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"175 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"176 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"177 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"178 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"179 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"180 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"181 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"182 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "193 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"183 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"184 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"185 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"186 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"187 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"188 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"189 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"190 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "191 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"190 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "194 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"191 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "192 SSD_VGG/SSDDetectionOutput[detection_head]/softmax";
"193 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "195 /nncf_model_output";
"194 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "196 /nncf_model_output";
"9 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/pad_apad" -> "9 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/pad";
"10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d_apad" -> "10 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[2]/conv2d";
"19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/pad_apad" -> "19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/pad";
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d_apad" -> "20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/pad_apad" -> "25 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/pad";
"26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d_apad" -> "26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/pad_apad" -> "34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/pad";
"35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d_apad" -> "35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"40 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/pad_apad" -> "40 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/pad";
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d_apad" -> "41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"45 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/pad_apad" -> "45 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/pad";
"46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d_apad" -> "46 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[19]/conv2d";
"50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/pad_apad" -> "50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/pad";
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d_apad" -> "51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[21]/conv2d";
"60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/pad_apad" -> "60 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/pad";
"61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d_apad" -> "61 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[26]/conv2d";
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/pad_apad" -> "65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/pad";
"66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d_apad" -> "66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[28]/conv2d";
"95 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/pad_apad" -> "95 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/pad";
"96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d_apad" -> "96 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/pad_apad" -> "104 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/pad";
"105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d_apad" -> "105 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[10]/conv2d";
"121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/pad_apad" -> "121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/pad";
"122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d_apad" -> "122 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/pad_apad" -> "132 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/pad";
"133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d_apad" -> "133 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/pad_apad" -> "135 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/pad";
"136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d_apad" -> "136 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"140 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/pad_apad" -> "140 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/pad";
"141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d_apad" -> "141 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"143 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/pad_apad" -> "143 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/pad";
"144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d_apad" -> "144 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"148 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/pad_apad" -> "148 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/pad";
"149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d_apad" -> "149 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"157 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/pad_apad" -> "157 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/pad";
"158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d_apad" -> "158 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"162 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/pad_apad" -> "162 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/pad";
"163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d_apad" -> "163 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"171 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/pad_apad" -> "171 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/pad";
"172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d_apad" -> "172 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[6]/NNCFConv2d[conf]/conv2d";
}
