strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=2, scope="ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"3 ResNeXt/NNCFConv2d[conv1]/conv2d" [id=3, scope="ResNeXt/NNCFConv2d[conv1]", type=conv2d];
"4 ResNeXt/BatchNorm2d[bn1]/batch_norm" [id=4, scope="ResNeXt/BatchNorm2d[bn1]", type=batch_norm];
"5 ResNeXt/relu" [id=5, scope=ResNeXt, type=relu];
"6 ResNeXt/SymmetricQuantizer/symmetric_quantize" [id=6, scope="ResNeXt/SymmetricQuantizer", type=symmetric_quantize];
"7 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=7, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"8 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d" [id=8, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]", type=conv2d];
"9 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]/batch_norm" [id=9, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]", type=batch_norm];
"10 ResNeXt/Sequential[layer1]/Block[0]/relu" [id=10, scope="ResNeXt/Sequential[layer1]/Block[0]", type=relu];
"11 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=11, scope="ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"12 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=12, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"13 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d" [id=13, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]", type=conv2d];
"14 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]/batch_norm" [id=14, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]", type=batch_norm];
"15 ResNeXt/Sequential[layer1]/Block[0]/relu" [id=15, scope="ResNeXt/Sequential[layer1]/Block[0]", type=relu];
"16 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=16, scope="ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"17 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=17, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d" [id=18, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]", type=conv2d];
"19 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/batch_norm" [id=19, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]", type=batch_norm];
"20 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=20, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"21 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=21, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"22 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=22, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"23 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=23, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"24 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=24, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"25 ResNeXt/Sequential[layer1]/Block[0]/__iadd__" [id=25, scope="ResNeXt/Sequential[layer1]/Block[0]", type=__iadd__];
"26 ResNeXt/Sequential[layer1]/Block[0]/relu" [id=26, scope="ResNeXt/Sequential[layer1]/Block[0]", type=relu];
"27 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=27, scope="ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"28 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=28, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"29 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d" [id=29, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]", type=conv2d];
"30 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]/batch_norm" [id=30, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]", type=batch_norm];
"31 ResNeXt/Sequential[layer1]/Block[1]/relu" [id=31, scope="ResNeXt/Sequential[layer1]/Block[1]", type=relu];
"32 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=32, scope="ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"33 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=33, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"34 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d" [id=34, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]", type=conv2d];
"35 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]/batch_norm" [id=35, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]", type=batch_norm];
"36 ResNeXt/Sequential[layer1]/Block[1]/relu" [id=36, scope="ResNeXt/Sequential[layer1]/Block[1]", type=relu];
"37 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=37, scope="ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"38 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=38, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d" [id=39, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]", type=conv2d];
"40 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/batch_norm" [id=40, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]", type=batch_norm];
"41 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=41, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"42 ResNeXt/Sequential[layer1]/Block[1]/__iadd__" [id=42, scope="ResNeXt/Sequential[layer1]/Block[1]", type=__iadd__];
"43 ResNeXt/Sequential[layer1]/Block[1]/relu" [id=43, scope="ResNeXt/Sequential[layer1]/Block[1]", type=relu];
"44 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=44, scope="ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"45 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=45, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"46 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d" [id=46, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]", type=conv2d];
"47 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]/batch_norm" [id=47, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]", type=batch_norm];
"48 ResNeXt/Sequential[layer1]/Block[2]/relu" [id=48, scope="ResNeXt/Sequential[layer1]/Block[2]", type=relu];
"49 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=49, scope="ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"50 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=50, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"51 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d" [id=51, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]", type=conv2d];
"52 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]/batch_norm" [id=52, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]", type=batch_norm];
"53 ResNeXt/Sequential[layer1]/Block[2]/relu" [id=53, scope="ResNeXt/Sequential[layer1]/Block[2]", type=relu];
"54 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=54, scope="ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"55 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=55, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"56 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d" [id=56, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]", type=conv2d];
"57 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/batch_norm" [id=57, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]", type=batch_norm];
"58 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=58, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"59 ResNeXt/Sequential[layer1]/Block[2]/__iadd__" [id=59, scope="ResNeXt/Sequential[layer1]/Block[2]", type=__iadd__];
"60 ResNeXt/Sequential[layer1]/Block[2]/relu" [id=60, scope="ResNeXt/Sequential[layer1]/Block[2]", type=relu];
"61 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=61, scope="ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"62 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=62, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"63 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d" [id=63, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]", type=conv2d];
"64 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]/batch_norm" [id=64, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]", type=batch_norm];
"65 ResNeXt/Sequential[layer2]/Block[0]/relu" [id=65, scope="ResNeXt/Sequential[layer2]/Block[0]", type=relu];
"66 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=66, scope="ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"67 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=67, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"68 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d" [id=68, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]", type=conv2d];
"69 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]/batch_norm" [id=69, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]", type=batch_norm];
"70 ResNeXt/Sequential[layer2]/Block[0]/relu" [id=70, scope="ResNeXt/Sequential[layer2]/Block[0]", type=relu];
"71 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=71, scope="ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"72 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=72, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"73 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d" [id=73, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]", type=conv2d];
"74 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/batch_norm" [id=74, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]", type=batch_norm];
"75 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=75, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"76 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=76, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"77 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=77, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"78 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=78, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"79 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=79, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"80 ResNeXt/Sequential[layer2]/Block[0]/__iadd__" [id=80, scope="ResNeXt/Sequential[layer2]/Block[0]", type=__iadd__];
"81 ResNeXt/Sequential[layer2]/Block[0]/relu" [id=81, scope="ResNeXt/Sequential[layer2]/Block[0]", type=relu];
"82 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=82, scope="ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"83 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=83, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"84 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d" [id=84, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]", type=conv2d];
"85 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]/batch_norm" [id=85, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]", type=batch_norm];
"86 ResNeXt/Sequential[layer2]/Block[1]/relu" [id=86, scope="ResNeXt/Sequential[layer2]/Block[1]", type=relu];
"87 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=87, scope="ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"88 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=88, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"89 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d" [id=89, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]", type=conv2d];
"90 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]/batch_norm" [id=90, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]", type=batch_norm];
"91 ResNeXt/Sequential[layer2]/Block[1]/relu" [id=91, scope="ResNeXt/Sequential[layer2]/Block[1]", type=relu];
"92 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=92, scope="ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"93 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=93, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"94 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d" [id=94, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]", type=conv2d];
"95 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/batch_norm" [id=95, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]", type=batch_norm];
"96 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=96, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"97 ResNeXt/Sequential[layer2]/Block[1]/__iadd__" [id=97, scope="ResNeXt/Sequential[layer2]/Block[1]", type=__iadd__];
"98 ResNeXt/Sequential[layer2]/Block[1]/relu" [id=98, scope="ResNeXt/Sequential[layer2]/Block[1]", type=relu];
"99 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=99, scope="ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"100 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=100, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"101 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d" [id=101, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]", type=conv2d];
"102 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]/batch_norm" [id=102, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]", type=batch_norm];
"103 ResNeXt/Sequential[layer2]/Block[2]/relu" [id=103, scope="ResNeXt/Sequential[layer2]/Block[2]", type=relu];
"104 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=104, scope="ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"105 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=105, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"106 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d" [id=106, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]", type=conv2d];
"107 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]/batch_norm" [id=107, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]", type=batch_norm];
"108 ResNeXt/Sequential[layer2]/Block[2]/relu" [id=108, scope="ResNeXt/Sequential[layer2]/Block[2]", type=relu];
"109 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=109, scope="ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"110 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=110, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"111 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d" [id=111, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]", type=conv2d];
"112 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/batch_norm" [id=112, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]", type=batch_norm];
"113 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=113, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"114 ResNeXt/Sequential[layer2]/Block[2]/__iadd__" [id=114, scope="ResNeXt/Sequential[layer2]/Block[2]", type=__iadd__];
"115 ResNeXt/Sequential[layer2]/Block[2]/relu" [id=115, scope="ResNeXt/Sequential[layer2]/Block[2]", type=relu];
"116 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=116, scope="ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"117 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=117, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"118 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d" [id=118, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]", type=conv2d];
"119 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]/batch_norm" [id=119, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]", type=batch_norm];
"120 ResNeXt/Sequential[layer3]/Block[0]/relu" [id=120, scope="ResNeXt/Sequential[layer3]/Block[0]", type=relu];
"121 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=121, scope="ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"122 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=122, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"123 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d" [id=123, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]", type=conv2d];
"124 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]/batch_norm" [id=124, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]", type=batch_norm];
"125 ResNeXt/Sequential[layer3]/Block[0]/relu" [id=125, scope="ResNeXt/Sequential[layer3]/Block[0]", type=relu];
"126 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=126, scope="ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"127 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=127, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"128 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d" [id=128, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]", type=conv2d];
"129 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/batch_norm" [id=129, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]", type=batch_norm];
"130 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=130, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"131 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=131, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"132 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=132, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"133 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=133, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"134 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=134, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"135 ResNeXt/Sequential[layer3]/Block[0]/__iadd__" [id=135, scope="ResNeXt/Sequential[layer3]/Block[0]", type=__iadd__];
"136 ResNeXt/Sequential[layer3]/Block[0]/relu" [id=136, scope="ResNeXt/Sequential[layer3]/Block[0]", type=relu];
"137 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=137, scope="ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"138 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=138, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"139 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d" [id=139, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]", type=conv2d];
"140 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]/batch_norm" [id=140, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]", type=batch_norm];
"141 ResNeXt/Sequential[layer3]/Block[1]/relu" [id=141, scope="ResNeXt/Sequential[layer3]/Block[1]", type=relu];
"142 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=142, scope="ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"143 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=143, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"144 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d" [id=144, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]", type=conv2d];
"145 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]/batch_norm" [id=145, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]", type=batch_norm];
"146 ResNeXt/Sequential[layer3]/Block[1]/relu" [id=146, scope="ResNeXt/Sequential[layer3]/Block[1]", type=relu];
"147 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=147, scope="ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"148 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=148, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"149 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d" [id=149, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]", type=conv2d];
"150 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/batch_norm" [id=150, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]", type=batch_norm];
"151 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=151, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"152 ResNeXt/Sequential[layer3]/Block[1]/__iadd__" [id=152, scope="ResNeXt/Sequential[layer3]/Block[1]", type=__iadd__];
"153 ResNeXt/Sequential[layer3]/Block[1]/relu" [id=153, scope="ResNeXt/Sequential[layer3]/Block[1]", type=relu];
"154 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=154, scope="ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"155 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=155, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"156 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d" [id=156, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]", type=conv2d];
"157 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]/batch_norm" [id=157, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]", type=batch_norm];
"158 ResNeXt/Sequential[layer3]/Block[2]/relu" [id=158, scope="ResNeXt/Sequential[layer3]/Block[2]", type=relu];
"159 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=159, scope="ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"160 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=160, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"161 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d" [id=161, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]", type=conv2d];
"162 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]/batch_norm" [id=162, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]", type=batch_norm];
"163 ResNeXt/Sequential[layer3]/Block[2]/relu" [id=163, scope="ResNeXt/Sequential[layer3]/Block[2]", type=relu];
"164 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=164, scope="ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"165 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=165, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"166 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d" [id=166, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]", type=conv2d];
"167 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/batch_norm" [id=167, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]", type=batch_norm];
"168 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=168, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"169 ResNeXt/Sequential[layer3]/Block[2]/__iadd__" [id=169, scope="ResNeXt/Sequential[layer3]/Block[2]", type=__iadd__];
"170 ResNeXt/Sequential[layer3]/Block[2]/relu" [id=170, scope="ResNeXt/Sequential[layer3]/Block[2]", type=relu];
"171 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=171, scope="ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"172 ResNeXt/avg_pool2d" [id=172, scope=ResNeXt, type=avg_pool2d];
"173 ResNeXt/SymmetricQuantizer/symmetric_quantize" [id=173, scope="ResNeXt/SymmetricQuantizer", type=symmetric_quantize];
"174 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [id=174, scope="ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", type=symmetric_quantize];
"175 ResNeXt/NNCFLinear[linear]/linear" [id=175, scope="ResNeXt/NNCFLinear[linear]", type=linear];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "3 ResNeXt/NNCFConv2d[conv1]/conv2d";
"2 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 ResNeXt/NNCFConv2d[conv1]/conv2d";
"3 ResNeXt/NNCFConv2d[conv1]/conv2d" -> "4 ResNeXt/BatchNorm2d[bn1]/batch_norm";
"4 ResNeXt/BatchNorm2d[bn1]/batch_norm" -> "5 ResNeXt/relu";
"5 ResNeXt/relu" -> "6 ResNeXt/SymmetricQuantizer/symmetric_quantize";
"6 ResNeXt/SymmetricQuantizer/symmetric_quantize" -> "8 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d";
"7 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "8 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d";
"8 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d" -> "9 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]/batch_norm";
"6 ResNeXt/SymmetricQuantizer/symmetric_quantize" -> "22 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"9 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]/batch_norm" -> "10 ResNeXt/Sequential[layer1]/Block[0]/relu";
"10 ResNeXt/Sequential[layer1]/Block[0]/relu" -> "11 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"11 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "13 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d";
"12 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "13 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d";
"13 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d" -> "14 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]/batch_norm";
"14 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]/batch_norm" -> "15 ResNeXt/Sequential[layer1]/Block[0]/relu";
"15 ResNeXt/Sequential[layer1]/Block[0]/relu" -> "16 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"16 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d";
"17 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d";
"18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d" -> "19 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/batch_norm";
"19 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/batch_norm" -> "20 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"20 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "25 ResNeXt/Sequential[layer1]/Block[0]/__iadd__";
"21 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "22 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"22 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "23 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"23 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "24 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"24 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "25 ResNeXt/Sequential[layer1]/Block[0]/__iadd__";
"25 ResNeXt/Sequential[layer1]/Block[0]/__iadd__" -> "26 ResNeXt/Sequential[layer1]/Block[0]/relu";
"26 ResNeXt/Sequential[layer1]/Block[0]/relu" -> "27 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"27 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "29 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d";
"27 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "42 ResNeXt/Sequential[layer1]/Block[1]/__iadd__";
"28 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "29 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d";
"29 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d" -> "30 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]/batch_norm";
"30 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]/batch_norm" -> "31 ResNeXt/Sequential[layer1]/Block[1]/relu";
"31 ResNeXt/Sequential[layer1]/Block[1]/relu" -> "32 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"32 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "34 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d";
"33 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "34 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d";
"34 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d" -> "35 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]/batch_norm";
"35 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]/batch_norm" -> "36 ResNeXt/Sequential[layer1]/Block[1]/relu";
"36 ResNeXt/Sequential[layer1]/Block[1]/relu" -> "37 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"37 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d";
"38 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d";
"39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d" -> "40 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/batch_norm";
"40 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/batch_norm" -> "41 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"41 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "42 ResNeXt/Sequential[layer1]/Block[1]/__iadd__";
"42 ResNeXt/Sequential[layer1]/Block[1]/__iadd__" -> "43 ResNeXt/Sequential[layer1]/Block[1]/relu";
"43 ResNeXt/Sequential[layer1]/Block[1]/relu" -> "44 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"44 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "46 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d";
"44 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "59 ResNeXt/Sequential[layer1]/Block[2]/__iadd__";
"45 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "46 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d";
"46 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d" -> "47 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]/batch_norm";
"47 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]/batch_norm" -> "48 ResNeXt/Sequential[layer1]/Block[2]/relu";
"48 ResNeXt/Sequential[layer1]/Block[2]/relu" -> "49 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"49 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "51 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d";
"50 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "51 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d";
"51 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d" -> "52 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]/batch_norm";
"52 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]/batch_norm" -> "53 ResNeXt/Sequential[layer1]/Block[2]/relu";
"53 ResNeXt/Sequential[layer1]/Block[2]/relu" -> "54 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"54 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "56 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d";
"55 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "56 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d";
"56 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d" -> "57 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/batch_norm";
"57 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/batch_norm" -> "58 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"58 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "59 ResNeXt/Sequential[layer1]/Block[2]/__iadd__";
"59 ResNeXt/Sequential[layer1]/Block[2]/__iadd__" -> "60 ResNeXt/Sequential[layer1]/Block[2]/relu";
"60 ResNeXt/Sequential[layer1]/Block[2]/relu" -> "61 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"61 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "63 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d";
"61 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "77 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"62 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "63 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d";
"63 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d" -> "64 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]/batch_norm";
"64 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]/batch_norm" -> "65 ResNeXt/Sequential[layer2]/Block[0]/relu";
"65 ResNeXt/Sequential[layer2]/Block[0]/relu" -> "66 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"66 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "68 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d";
"67 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "68 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d";
"68 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d" -> "69 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]/batch_norm";
"69 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]/batch_norm" -> "70 ResNeXt/Sequential[layer2]/Block[0]/relu";
"70 ResNeXt/Sequential[layer2]/Block[0]/relu" -> "71 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"71 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "73 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d";
"72 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "73 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d";
"73 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d" -> "74 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/batch_norm";
"74 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/batch_norm" -> "75 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"75 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "80 ResNeXt/Sequential[layer2]/Block[0]/__iadd__";
"76 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "77 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"77 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "78 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"78 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "79 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"79 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "80 ResNeXt/Sequential[layer2]/Block[0]/__iadd__";
"80 ResNeXt/Sequential[layer2]/Block[0]/__iadd__" -> "81 ResNeXt/Sequential[layer2]/Block[0]/relu";
"81 ResNeXt/Sequential[layer2]/Block[0]/relu" -> "82 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"82 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "84 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d";
"82 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "97 ResNeXt/Sequential[layer2]/Block[1]/__iadd__";
"83 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "84 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d";
"84 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d" -> "85 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]/batch_norm";
"85 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]/batch_norm" -> "86 ResNeXt/Sequential[layer2]/Block[1]/relu";
"86 ResNeXt/Sequential[layer2]/Block[1]/relu" -> "87 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"87 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "89 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d";
"88 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "89 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d";
"89 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d" -> "90 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]/batch_norm";
"90 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]/batch_norm" -> "91 ResNeXt/Sequential[layer2]/Block[1]/relu";
"91 ResNeXt/Sequential[layer2]/Block[1]/relu" -> "92 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"92 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "94 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d";
"93 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "94 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d";
"94 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d" -> "95 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/batch_norm";
"95 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/batch_norm" -> "96 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"96 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "97 ResNeXt/Sequential[layer2]/Block[1]/__iadd__";
"97 ResNeXt/Sequential[layer2]/Block[1]/__iadd__" -> "98 ResNeXt/Sequential[layer2]/Block[1]/relu";
"98 ResNeXt/Sequential[layer2]/Block[1]/relu" -> "99 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"99 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "101 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d";
"99 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "114 ResNeXt/Sequential[layer2]/Block[2]/__iadd__";
"100 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "101 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d";
"101 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d" -> "102 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]/batch_norm";
"102 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]/batch_norm" -> "103 ResNeXt/Sequential[layer2]/Block[2]/relu";
"103 ResNeXt/Sequential[layer2]/Block[2]/relu" -> "104 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"104 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "106 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d";
"105 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "106 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d";
"106 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d" -> "107 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]/batch_norm";
"107 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]/batch_norm" -> "108 ResNeXt/Sequential[layer2]/Block[2]/relu";
"108 ResNeXt/Sequential[layer2]/Block[2]/relu" -> "109 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"109 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "111 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d";
"110 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "111 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d";
"111 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d" -> "112 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/batch_norm";
"112 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/batch_norm" -> "113 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"113 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "114 ResNeXt/Sequential[layer2]/Block[2]/__iadd__";
"114 ResNeXt/Sequential[layer2]/Block[2]/__iadd__" -> "115 ResNeXt/Sequential[layer2]/Block[2]/relu";
"115 ResNeXt/Sequential[layer2]/Block[2]/relu" -> "116 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"116 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "118 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d";
"116 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "132 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"117 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "118 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d";
"118 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d" -> "119 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]/batch_norm";
"119 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]/batch_norm" -> "120 ResNeXt/Sequential[layer3]/Block[0]/relu";
"120 ResNeXt/Sequential[layer3]/Block[0]/relu" -> "121 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"121 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "123 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d";
"122 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "123 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d";
"123 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d" -> "124 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]/batch_norm";
"124 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]/batch_norm" -> "125 ResNeXt/Sequential[layer3]/Block[0]/relu";
"125 ResNeXt/Sequential[layer3]/Block[0]/relu" -> "126 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"126 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "128 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d";
"127 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "128 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d";
"128 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d" -> "129 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/batch_norm";
"129 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/batch_norm" -> "130 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"130 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "135 ResNeXt/Sequential[layer3]/Block[0]/__iadd__";
"131 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "132 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"132 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "133 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"133 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "134 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"134 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "135 ResNeXt/Sequential[layer3]/Block[0]/__iadd__";
"135 ResNeXt/Sequential[layer3]/Block[0]/__iadd__" -> "136 ResNeXt/Sequential[layer3]/Block[0]/relu";
"136 ResNeXt/Sequential[layer3]/Block[0]/relu" -> "137 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"137 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "139 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d";
"137 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "152 ResNeXt/Sequential[layer3]/Block[1]/__iadd__";
"138 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "139 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d";
"139 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d" -> "140 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]/batch_norm";
"140 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]/batch_norm" -> "141 ResNeXt/Sequential[layer3]/Block[1]/relu";
"141 ResNeXt/Sequential[layer3]/Block[1]/relu" -> "142 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"142 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "144 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d";
"143 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "144 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d";
"144 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d" -> "145 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]/batch_norm";
"145 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]/batch_norm" -> "146 ResNeXt/Sequential[layer3]/Block[1]/relu";
"146 ResNeXt/Sequential[layer3]/Block[1]/relu" -> "147 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"147 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "149 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d";
"148 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "149 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d";
"149 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d" -> "150 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/batch_norm";
"150 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/batch_norm" -> "151 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"151 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "152 ResNeXt/Sequential[layer3]/Block[1]/__iadd__";
"152 ResNeXt/Sequential[layer3]/Block[1]/__iadd__" -> "153 ResNeXt/Sequential[layer3]/Block[1]/relu";
"153 ResNeXt/Sequential[layer3]/Block[1]/relu" -> "154 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"154 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "156 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d";
"154 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "169 ResNeXt/Sequential[layer3]/Block[2]/__iadd__";
"155 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "156 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d";
"156 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d" -> "157 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]/batch_norm";
"157 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]/batch_norm" -> "158 ResNeXt/Sequential[layer3]/Block[2]/relu";
"158 ResNeXt/Sequential[layer3]/Block[2]/relu" -> "159 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"159 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "161 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d";
"160 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "161 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d";
"161 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d" -> "162 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]/batch_norm";
"162 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]/batch_norm" -> "163 ResNeXt/Sequential[layer3]/Block[2]/relu";
"163 ResNeXt/Sequential[layer3]/Block[2]/relu" -> "164 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"164 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "166 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d";
"165 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "166 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d";
"166 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d" -> "167 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/batch_norm";
"167 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/batch_norm" -> "168 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"168 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "169 ResNeXt/Sequential[layer3]/Block[2]/__iadd__";
"169 ResNeXt/Sequential[layer3]/Block[2]/__iadd__" -> "170 ResNeXt/Sequential[layer3]/Block[2]/relu";
"170 ResNeXt/Sequential[layer3]/Block[2]/relu" -> "171 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"171 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "172 ResNeXt/avg_pool2d";
"172 ResNeXt/avg_pool2d" -> "173 ResNeXt/SymmetricQuantizer/symmetric_quantize";
"173 ResNeXt/SymmetricQuantizer/symmetric_quantize" -> "175 ResNeXt/NNCFLinear[linear]/linear";
"174 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "175 ResNeXt/NNCFLinear[linear]/linear";
}
